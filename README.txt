
SK ONLINE VOTING SYSTEM
A web-based Student/Youth Council voting system designed for secure and efficient election management.
Built with Flask (Python), MySQL, and HTML/CSS/JS.

üîê SYSTEM FEATURES

üë§ USER FUNCTIONALITY (VOTERS)
‚Ä¢ Login using Voter ID or Email
‚Ä¢ Register (account goes into pending status)
‚Ä¢ View upcoming and ongoing elections
‚Ä¢ View candidate information by position
‚Ä¢ Vote during the election period (one-time voting logic)
‚Ä¢ View election results (if allowed by admin)
‚Ä¢ Edit profile (Voter ID is not editable)
‚Ä¢ Wait for admin approval before gaining full access (if not verified)

üõ† ADMIN FUNCTIONALITY
‚Ä¢ Login with hardcoded admin account (auto-created on first run)
‚Ä¢ View upcoming and ongoing elections
‚Ä¢ Create, edit, delete election events
‚Ä¢ Manage candidates by position (Chairperson, Treasurer, Kagawad)
‚Ä¢ Automatically create new parties
‚Ä¢ Verify or delete user registrations
‚Ä¢ View full voting history logs
‚Ä¢ View and manage result visibility for each position
‚Ä¢ Edit admin profile

üíª TECHNOLOGY STACK
Backend:     Python (Flask)
Frontend:    HTML5, CSS3, JS (vanilla)
Database:    MySQL
ORM:         Raw SQL (mysql.connector)
Session:     Flask sessions
Validation:  Flash + HTML + JS
Structure:   Functional Flask app (no blueprints)

üóÉ DATABASE STRUCTURE
Database Name: cccs105

Key Tables:
‚Ä¢ users              - Stores voter and admin accounts
‚Ä¢ elections          - Events with title, timeframe, status
‚Ä¢ candidates         - Linked to positions and parties
‚Ä¢ parties            - Party details
‚Ä¢ positions          - Chairperson, Treasurer, Kagawad
‚Ä¢ votes              - User-submitted votes
‚Ä¢ election_results   - Aggregated vote results
‚Ä¢ result_visibility  - Admin control for result display

‚öôÔ∏è SETUP & RUN

Python version required: 3.7+

1. Install dependencies:
   pip install flask mysql-connector-python python-dotenv

2. Create a .env file in the root directory with the following content:
   DB_HOST=localhost
   DB_USER=root
   DB_PASSWORD=
   DB_NAME=cccs105
   SECRET_KEY=your_secret_key_here

3. Run the app:
   python new_app.py

4. Open your browser and visit:
   http://127.0.0.1:5000

üîë ADMIN ACCOUNT (Auto-created on first run)

‚Ä¢ Voter ID: ADMIN001
‚Ä¢ Email:    admin@gmail.com
‚Ä¢ Password: admin12345
‚Ä¢ Role:     admin
‚Ä¢ Status:   verified

‚ö†Ô∏è LIMITATIONS (TO BE IMPROVED)
‚Ä¢ No image upload for candidates/profiles
‚Ä¢ Only one admin account supported
‚Ä¢ No password recovery function
‚Ä¢ No blueprints/modular structure

üë®‚Äçüíª DEVELOPER
NAS, JOHN CARLO E.
üìß johncarlonas@gmail.com
